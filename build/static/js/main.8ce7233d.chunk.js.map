{"version":3,"sources":["components/Player.jsx","utils/isWinner.js","utils/createPlayer.js","utils/isTie.js","assets/move.wav","assets/winner.wav","App.jsx","reportWebVitals.js","index.js"],"names":["Player","color","name","cups","isPlayersTurn","selectedSize","setSelectedSize","className","style","borderColor","map","size","index","onClick","backgroundColor","isWinner","board","num","undefined","player","createPlayer","isTie","players","biggest","reduce","acc","cell","App","sizes","useState","setIsPlayersTurn","setPlayers","player1","player2","setBoard","Audio","WinnerSfx","play","id","Math","floor","y","x","numOfCups","tempBoard","tempPlayers","PlayerSfx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ce7233d.chunk.js","sourcesContent":["import './Player.css';\n\nfunction Player({\n  color,\n  name,\n  cups,\n  isPlayersTurn,\n  selectedSize,\n  setSelectedSize,\n}) {\n  const sizes = ['s', 'm', 'l', 'x'];\n  return (\n    <div\n      className='Player'\n      style={{\n        borderColor: isPlayersTurn ? color : '#666',\n      }}\n    >\n      <span>{name}</span>\n      <ul>\n        {sizes.map((size, index) => (\n          <li\n            key={`player-${+isPlayersTurn}-${size}`}\n            onClick={() => {\n              if (isPlayersTurn) {\n                setSelectedSize(index);\n              }\n            }}\n          >\n            <div\n              className={`${size}-cup cup`}\n              style={{\n                borderColor:\n                  isPlayersTurn && selectedSize === index ? '#FFF' : '#3333',\n              }}\n            >\n              <div\n                style={{\n                  backgroundColor: color,\n                }}\n              ></div>\n            </div>\n            <div>{cups[index]}</div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Player;\n","const isWinner = (board) => {\n  for (let num of [0, 1, 2]) {\n    if (\n      (board[0][num].player !== undefined &&\n        board[0][num].player === board[1][num].player &&\n        board[1][num].player === board[2][num].player) ||\n      (board[num][0].player !== undefined &&\n        board[num][0].player === board[num][1].player &&\n        board[num][1].player === board[num][2].player)\n    ) {\n      return true;\n    }\n  }\n  if (\n    (board[0][0].player !== undefined &&\n      board[0][0].player === board[1][1].player &&\n      board[1][1].player === board[2][2].player) ||\n    (board[0][2].player !== undefined &&\n      board[0][2].player === board[1][1].player &&\n      board[1][1].player === board[2][0].player)\n  ) {\n    return true;\n  }\n  return false;\n};\n\nexport default isWinner;\n","const createPlayer = (name, color) => {\n  return {\n    name,\n    color,\n    cups: [4, 3, 2, 1],\n  };\n};\n\nexport default createPlayer;\n","const isTie = (board, players, player) => {\n  const biggest = players[player].cups.reduce((acc, num, index) => {\n    if (num) {\n      return index;\n    }\n    return acc;\n  }, 0);\n  for (let cell of [...board[0], ...board[1], ...board[2]]) {\n    if (cell.size === undefined || biggest > cell.size) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport default isTie;\n","export default __webpack_public_path__ + \"static/media/move.8d86d394.wav\";","export default __webpack_public_path__ + \"static/media/winner.cc473c78.wav\";","import { useState } from 'react';\nimport './App.css';\nimport Player from './components/Player';\nimport isWinner from './utils/isWinner';\nimport createPlayer from './utils/createPlayer';\nimport isTie from './utils/isTie';\nimport PlayerSfx from './assets/move.wav';\nimport WinnerSfx from './assets/winner.wav';\n\nfunction App() {\n  const sizes = ['s', 'm', 'l', 'x'];\n  const [isPlayersTurn, setIsPlayersTurn] = useState(true);\n  const [selectedSize, setSelectedSize] = useState(0);\n  const [players, setPlayers] = useState([\n    { ...createPlayer('Player 1', 'red') },\n    { ...createPlayer('Player 2', 'green') },\n  ]);\n  const [player1, player2] = players;\n  const [board, setBoard] = useState([\n    [{}, {}, {}],\n    [{}, {}, {}],\n    [{}, {}, {}],\n  ]);\n  const newGame = () => {\n    setIsPlayersTurn(true);\n    setPlayers([\n      { ...createPlayer('Player 1', 'red') },\n      { ...createPlayer('Player 2', 'green') },\n    ]);\n    setBoard([\n      [{}, {}, {}],\n      [{}, {}, {}],\n      [{}, {}, {}],\n    ]);\n  };\n\n  if (isWinner(board)) {\n    new Audio(WinnerSfx).play();\n  }\n\n  return (\n    <div id='App'>\n      {isWinner(board) || isTie(board, players, +isPlayersTurn) ? null : (\n        <div id='board' className='animate__animated  animate__flipInY'>\n          {[...board[0], ...board[1], ...board[2]].map((cell, index) => {\n            return (\n              <div\n                key={`cell-${index}`}\n                onClick={() => {\n                  const [y, x] = [Math.floor(index / 3), index % 3];\n                  const numOfCups = players[+!isPlayersTurn].cups[selectedSize];\n                  if (\n                    (board[y][x].size === undefined ||\n                      board[y][x].size < selectedSize) &&\n                    numOfCups &&\n                    !isWinner(board)\n                  ) {\n                    const tempBoard = { ...board };\n                    const tempPlayers = [...players];\n                    tempBoard[y][x] = {\n                      player: +!isPlayersTurn,\n                      size: selectedSize,\n                    };\n                    tempPlayers[+!isPlayersTurn].cups[selectedSize] =\n                      numOfCups - 1;\n                    setBoard(tempBoard);\n                    setPlayers(tempPlayers);\n                    setSelectedSize(0);\n                    setIsPlayersTurn(!isPlayersTurn);\n                    new Audio(PlayerSfx).play();\n                  }\n                }}\n              >\n                {cell.size > -1 ? (\n                  <div\n                    style={{\n                      backgroundColor:\n                        cell.player !== undefined\n                          ? cell.player === 0\n                            ? players[0].color\n                            : players[1].color\n                          : '#FFF',\n                    }}\n                    className={`${\n                      sizes[cell.size]\n                    }-cell animate__animated animate__flipInX`}\n                  ></div>\n                ) : null}\n              </div>\n            );\n          })}\n        </div>\n      )}\n      {isWinner(board) || isTie(board, players, +isPlayersTurn) ? (\n        <div id='winner'>\n          <h2>\n            {isWinner(board) ? `${players[+isPlayersTurn].name} Wins!` : 'TIE!'}\n          </h2>\n          <button onClick={newGame}>New Game</button>\n        </div>\n      ) : (\n        <div id='players' className='animate__animated animate__flipInX'>\n          <Player\n            isPlayersTurn={isPlayersTurn}\n            setSelectedSize={setSelectedSize}\n            selectedSize={selectedSize}\n            {...player1}\n          />\n          <Player\n            isPlayersTurn={!isPlayersTurn}\n            setSelectedSize={setSelectedSize}\n            selectedSize={selectedSize}\n            {...player2}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}